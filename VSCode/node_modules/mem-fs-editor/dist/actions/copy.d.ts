/// <reference types="node" resolution-mode="require"/>
import { type Options as GlobbyOptions } from 'globby';
import { Data, Options } from 'ejs';
import type { MemFsEditor } from '../index.js';
export type CopyOptions = CopySingleOptions & {
    noGlob?: boolean;
    globOptions?: GlobbyOptions;
    ignoreNoMatch?: boolean;
    fromBasePath?: string;
    processDestinationPath?: (string: any) => string;
};
export declare function copy(this: MemFsEditor, from: string | string[], to: string, options?: CopyOptions, context?: Data, tplSettings?: Options): void;
export type CopySingleOptions = {
    append?: boolean;
    process?: (contents: string | Buffer, filepath: string, destination: string) => string | Buffer;
};
export declare function _copySingle(this: MemFsEditor, from: string, to: string, options?: CopySingleOptions): void;
