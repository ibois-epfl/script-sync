import { Transform } from 'stream';
import { isFilePending } from './state.js';
export function createTransform(transform) {
    return new Transform({
        objectMode: true,
        transform(...args) {
            transform.apply(this, args);
        },
    });
}
export const createPendingFilesPassthrough = () => createTransform((file, _enc, cb) => {
    // Don't process deleted file who haven't been commited yet.
    cb(undefined, isFilePending(file) ? file : undefined);
});
export const createCommitTransform = (memFsEditor) => createTransform((file, _enc, cb) => {
    memFsEditor
        .commitFileAsync(file)
        .then(() => cb())
        .catch((error) => cb(error));
});
